import {render, screen} from '@testing-library/react';
import { Provider } from 'react-redux';
import {configureMockStore} from '@jedmao/redux-mock-store';
import {createMemoryHistory} from 'history';
import { generatePath } from 'react-router-dom';
import HistoryRouter from '../../history-route/history-route';
import ModalReview from './modal-review';
import { makeFakeGuitarWithComment } from '../../../mocks/data-mocks';
import { ActiveModal } from '../../../settings/active-modal';
import { AppRoute } from '../../../settings/app-routes';

const mockStore = configureMockStore();

describe('Renders modal-review-component', () => {
  const history = createMemoryHistory();
  // const mockGuitars = makeFakeGuitarsWithComments;
  const mockGuitar = makeFakeGuitarWithComment();
  history.push(generatePath(AppRoute.Product, {id: `${mockGuitar.id}`}));
  // const mockComment = makeFakeComment();

  it('should NOT render modal-review container, when ActiveModal.NoModal', () => {

    const store = mockStore({
      DATA: {
        // isDataLoaded: true,
        // guitarsWithComments: mockGuitars,
      },
      INTERFACE: {
        // activePage: 1,
        activeModal: ActiveModal.NoModal,
      },
    });

    render(
      <Provider store={store}>
        <HistoryRouter history={history}>
          <ModalReview />
        </HistoryRouter>
      </Provider>,
    );

    expect(screen.queryByTestId(/modal-review/i)).not.toBeInTheDocument();
  });
});
