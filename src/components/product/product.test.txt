import {render, screen} from '@testing-library/react';
import { Provider } from 'react-redux';
import {configureMockStore} from '@jedmao/redux-mock-store';
import {createMemoryHistory} from 'history';
import { makeFakeComments, makeFakeGuitar, makeFakeGuitars } from '../../mocks/data-mocks';
import HistoryRouter from '../history-route/history-route';
import { AppRoute } from '../../settings/app-routes';
import Product from './product';
import { generatePath } from 'react-router-dom';
import { ActiveModal } from '../../settings/active-modal';

const mockStore = configureMockStore();

describe('Renders product-component', () => {
  const history = createMemoryHistory();
  const mockGuitars = makeFakeGuitars;
  const mockGuitar = makeFakeGuitar();
  const mockComments = makeFakeComments;

  it('should render product container', () => {
    history.push(generatePath(AppRoute.Product, {id: `${mockGuitar.id}`}));

    const store = mockStore({
      DATA: {
        isDataLoaded: true,
        guitarsWithComments: mockGuitars,
        guitarByID: mockGuitar,
        commentsByID: mockComments,
      },
      INTERFACE: {
        activePage: 1,
        commentsShown: makeFakeComments,
        activeModal: ActiveModal.NoModal,
      },
    });

    render(
      <Provider store={store}>
        <HistoryRouter history={history}>
          <Product />
        </HistoryRouter>
      </Provider>,
    );

    expect(screen.getByTestId(/product-container/i)).toBeInTheDocument();
  });
});
